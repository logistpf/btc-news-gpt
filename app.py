
import streamlit as st
import feedparser
import openai
from datetime import datetime

openai.api_key = st.secrets["openai_api_key"]

rss_urls = [
    "https://www.coindesk.com/arc/outboundfeeds/rss/",
    "https://cointelegraph.com/rss",
    "https://decrypt.co/feed",
    "https://bitcoinmagazine.com/.rss/full",
    "https://bitcoinist.com/feed/",
    "https://cryptoslate.com/feed/",
    "https://cryptobriefing.com/feed/",
    "https://www.newsbtc.com/feed/",
    "https://coingape.com/feed/",
    "https://cryptopotato.com/feed/",
    "https://u.today/rss",
    "https://www.ccn.com/rss-feeds/crypto/",
    "https://bitcoinnews.com/rss-feed/",
    "https://nulltx.com/feed/",
    "https://www.cryptoglobe.com/feed/",
    "https://cryptodaily.co.uk/feed",
    "https://cryptonews.com/news/feed/",
    "https://coinjournal.net/feed/",
    "https://coincheckup.com/rss",
    "https://www.coinspeaker.com/feed/"
]

def analyze_sentiment(text):
    prompt = f"""–ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π –Ω–∞—Å—Ç—É–ø–Ω–∏–π —Ç–µ–∫—Å—Ç –∑ —Ç–æ—á–∫–∏ –∑–æ—Ä—É –≤–ø–ª–∏–≤—É –Ω–∞ —Ü—ñ–Ω—É BTC/USDT.
–í–∫–∞–∂–∏ –æ–¥–Ω—É –∑ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π: bullish (‚Üë), bearish (‚Üì), –∞–±–æ neutral (‚Üí).

–¢–µ–∫—Å—Ç: "{text}"
–í–∏—Å–Ω–æ–≤–æ–∫:"""
    try:
        response = openai.ChatCompletion.create(
            model="gpt-4",
            messages=[{"role": "user", "content": prompt}]
        )
        return response['choices'][0]['message']['content'].strip()
    except Exception as e:
        return f"Error: {e}"

st.title("GPT-–∞–Ω–∞–ª—ñ—Ç–∏–∫ –Ω–æ–≤–∏–Ω BTC/USDT")
st.write("–¶–µ–π –∑–∞—Å—Ç–æ—Å—É–Ω–æ–∫ –∑–±–∏—Ä–∞—î –Ω–æ–≤–∏–Ω–∏ –∑ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω–∏—Ö –¥–∂–µ—Ä–µ–ª —ñ –≤–∏–∑–Ω–∞—á–∞—î —ó—Ö–Ω—ñ–π –Ω–∞—Å—Ç—Ä—ñ–π —â–æ–¥–æ BTC/USDT.")

if st.button("üîç –ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –Ω–æ–≤–∏–Ω–∏"):
    results = []
    with st.spinner("–ó–±—ñ—Ä —ñ –∞–Ω–∞–ª—ñ–∑ –Ω–æ–≤–∏–Ω..."):
        for url in rss_urls:
            feed = feedparser.parse(url)
            for entry in feed.entries[:3]:
                title = entry.get('title', 'No Title')
                summary = entry.get('summary', '')
                published = entry.get('published', datetime.utcnow().isoformat())
                full_text = f"{title}. {summary}"
                sentiment = analyze_sentiment(full_text)
                results.append({
                    "–î–∞—Ç–∞": published,
                    "–î–∂–µ—Ä–µ–ª–æ": url,
                    "–ó–∞–≥–æ–ª–æ–≤–æ–∫": title,
                    "–ù–∞—Å—Ç—Ä—ñ–π": sentiment
                })

    st.success("–ê–Ω–∞–ª—ñ–∑ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    st.write("### –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∞–Ω–∞–ª—ñ–∑—É:")
    for res in results:
        st.markdown(f"**{res['–î–∞—Ç–∞']}** | *{res['–î–∂–µ—Ä–µ–ª–æ']}*")
        st.markdown(f"**{res['–ó–∞–≥–æ–ª–æ–≤–æ–∫']}**")
        st.markdown(f"üß† –ù–∞—Å—Ç—Ä—ñ–π: **{res['–ù–∞—Å—Ç—Ä—ñ–π']}**")
        st.markdown("---")
